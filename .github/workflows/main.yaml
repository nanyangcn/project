name: Release application

on:
  push:

env:
  IMAGE_SERVER: ${{ secrets.DOCKERHUB_USERNAME }}/project-server
  IMAGE_BROADCASTER: ${{ secrets.DOCKERHUB_USERNAME }}/project-broadcaster
  IMAGE_CLIENT: ${{ secrets.DOCKERHUB_USERNAME }}/project-client
  IMAGE_CRONJOB: ${{ secrets.DOCKERHUB_USERNAME }}/project-cronjob

jobs:
  build-1:
    name: Server - Build, Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create image tag
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Server - Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        tags: ${{ env.IMAGE_SERVER }}:${{ env.IMAGE_TAG }}
  build-2:
    name: Broadcaster - Build, Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create image tag
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Broadcaster - Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./broadcaster
        file: ./broadcaster/Dockerfile
        push: true
        tags: ${{ env.IMAGE_BROADCASTER }}:${{ env.IMAGE_TAG }}
  build-3:
    name: Client - Build, Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create image tag
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Client - Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./client
        file: ./client/Dockerfile
        push: true
        tags: ${{ env.IMAGE_CLIENT }}:${{ env.IMAGE_TAG }}
  build-4:
    name: Cronjob - Build, Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create image tag
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Cronjob - Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./cronjob
        file: ./cronjob/Dockerfile
        push: true
        tags: ${{ env.IMAGE_CRONJOB }}:${{ env.IMAGE_TAG }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-1, build-2, build-3, build-4]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create image tag
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    - name: Deploy
      run: |-
        ./kustomize edit set namespace project-${GITHUB_REF#refs/heads/}
        ./kustomize edit set image \
          PROJECT/IMAGE_BROADCASTER=$IMAGE_BROADCASTER:$IMAGE_TAG \
          PROJECT/IMAGE_SERVER=$IMAGE_SERVER:$IMAGE_TAG \
          PROJECT/IMAGE_CLIENT=$IMAGE_CLIENT:$IMAGE_TAG \
          PROJECT/IMAGE_CRONJOB=$IMAGE_CRONJOB:$IMAGE_TAG
    - name: Commit and push
      uses: EndBug/add-and-commit@v5
      with:
        add: './kustomization.yaml'
        message: New version release for gitops-app ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}